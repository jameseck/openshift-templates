apiVersion: v1
kind: Template
message: |-
  The following service(s) have been created in your project: ${NAME}.

  For more information about using this template, including OpenShift considerations, see https://github.com/jameseck/openshift-templates
metadata:
  annotations:
    description: This template assumes you will have a torrents volume already defined.
    iconClass: fa fa-television
    openshift.io/display-name: Deluget
    openshift.io/documentation-url: https://github.com/jameseck/openshift-templates
    openshift.io/long-description: This template defines resources needed to run Deluget.
    openshift.io/provider-display-name: James Eckersall
    openshift.io/support-url: https://github.com/jameseck/openshift-templates
    tags: deluge
    template.openshift.io/bindable: 'false'
  name: deluge
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${NAME}
    labels:
      app: ${NAME}
  spec:
    dockerImageRepository: binhex/arch-delugevpn
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: binhex/arch-delugevpn:1.3.15-1-02
        importPolicy:
          scheduled: true
      name: 1.3.15-1-02
    - annotations: null
      from:
        kind: DockerImage
        name: binhex/arch-delugevpn:latest
        importPolicy:
          scheduled: true
      name: latest
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 4
    labels:
      app: ${NAME}
    name: ${NAME}
  spec:
    replicas: 1
    selector:
      app: ${NAME}
      deploymentconfig: ${NAME}
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${NAME}
          deploymentconfig: ${NAME}
      spec:
        initContainers:
        - name: init-${NAME}
          image: centos:latest
          command: ['/bin/bash', '/pre/install.sh']
          volumeMounts:
          - mountPath: /pre
            name: ${NAME}-pre-install
          - mountPath: /config
            name: ${NAME}-config
          resources: {}
          securityContext:
            privileged: true
        containers:
        - env:
          - name: VPN_ENABLED
            value: "true"
          - name: VPN_DEVICE_TYPE
            value: "tun"
          - name: VPN_CONFIG
            value: ${VPN_CONFIG}
          - name: VPN_PROV
            value: ${VPN_PROV}
          - name: VPN_PORT
            value: ${VPN_PORT}
          - name: VPN_USER
            value: ${VPN_USER}
          - name: VPN_PASS
            value: ${VPN_PASS}
          - name: VPN_PROTOCOL
            value: ${VPN_PROTOCOL}
          - name: LAN_NETWORK
            value: ${LAN_NETWORK}
          - name: VPN_REMOTE
            value: ${VPN_REMOTE}
          - name: PGID
            value: ${PGID}
          - name: PUID
            value: ${PUID}
          - name: VPN_INCOMING_PORT
            value: ${VPN_INCOMING_PORT}
          - name: NAME_SERVERS
            value: "8.8.8.8,37.235.1.174,8.8.4.4,37.235.1.177"
          image: " "
          imagePullPolicy: Always
          readinessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: /
              port: 8112
            timeoutSeconds: 5
          livenessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: /
              port: 8112
            timeoutSeconds: 5
          name: ${NAME}
          ports:
          - containerPort: 58946
            protocol: TCP
          - containerPort: 58946
            protocol: UDP
          - containerPort: 8112
            protocol: TCP
          - containerPort: 8118
            protocol: TCP
          - containerPort: 58846
            protocol: TCP
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /pre
            name: ${NAME}-pre-install
          - mountPath: /config
            name: ${NAME}-config
          - mountPath: /torrents
            name: torrents
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        serviceAccount: ${NAME}
        serviceAccountName: ${NAME}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            name: ${NAME}-pre-install
          name: ${NAME}-pre-install
        - persistentVolumeClaim:
            claimName: torrents
          name: torrents
        - persistentVolumeClaim:
            claimName: ${NAME}-config
          name: ${NAME}-config
    test: false
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${NAME}
        from:
          kind: ImageStreamTag
          name: deluge:1.3.15-1-02
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: null
    name: ${NAME}
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    labels:
      app: ${NAME}
    name: ${NAME}
  spec:
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
    host: ${SITE_URL}
    port:
      targetPort: 8112-tcp
    to:
      kind: Service
      name: ${NAME}
      weight: 100
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
    creationTimestamp: null
    labels:
      app: ${NAME}
    name: ${NAME}
  spec:
    ports:
    - name: 8112-tcp
      port: 8112
      protocol: TCP
      targetPort: 8112
    - name: 8118-tcp
      port: 8118
      protocol: TCP
      targetPort: 8118
    - name: 58846-tcp
      port: 58846
      protocol: TCP
      targetPort: 58846
    - name: 58946-tcp
      port: 58946
      protocol: TCP
      targetPort: 58946
    - name: 58946-udp
      port: 58946
      protocol: UDP
      targetPort: 58946
    selector:
      app: ${NAME}
      deploymentconfig: ${NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${NAME}-config
    labels:
      app: ${NAME}
  spec:
    accessModes:
    - ReadWriteMany
    resources:
       requests:
         storage: ${CONFIG_VOLUME_SIZE}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: torrents
  spec:
    accessModes:
    - ReadWriteMany
    resources:
       requests:
         storage: ${TORRENT_VOLUME_SIZE}
    selector:
      matchLabels:
        typelabel: ${TORRENT_VOLUME_LABEL}
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: ${NAME}-pre-install
  data:
    install.sh: |
      #!/bin/bash

      yum -y install curl unzip
      copy_file () { [ ! -f $2 ] && cp "$1" "$2"; }

      mkdir -p /config/openvpn /tmp/openvpn >/dev/null 2>&1
      curl -s https://www.privateinternetaccess.com/openvpn/openvpn.zip -o /tmp/openvpn.zip
      cd /tmp/openvpn && unzip -qo /tmp/openvpn.zip

      copy_file "/tmp/openvpn/ca.rsa.2048.crt"  "/config/openvpn/"
      copy_file "/tmp/openvpn/crl.rsa.2048.pem" "/config/openvpn/"
      copy_file "/tmp/openvpn/UK London.ovpn"   "/config/openvpn/openvpn.ovpn"

      rm -rf /tmp/openvpn /tmp/openvpn.zip
      exit 0

parameters:
- description: The name assigned to all of the frontend objects defined in this template.
  name: NAME
  displayName: Name
  value: deluge
  required: true
- description: The URL for this application
  name: SITE_URL
  displayName: Site URL
  value: ""
- description: The match label of an existing PV where Torrents are stored
  name: TORRENT_VOLUME_LABEL
  displayName: Torrent Volume Label
  value: torrents
  required: true
- description: The size of the torrent volume
  name: TORRENT_VOLUME_SIZE
  displayName: Torrent Volume Size
  value: 100Gi
  required: true
- description: The size of the config volume
  name: CONFIG_VOLUME_SIZE
  displayName: Config Volume Size
  value: 1Gi
  required: true
- description: The VPN Provider (default pia)
  name: VPN_PROV
  displayName: VPN Provider
  value: pia
  required: true
- description: The VPN Config file path
  name: VPN_CONFIG
  displayName: VPN Config File Path
  value: /config/openvpn/openvpn.ovpn
  required: true
- description: The VPN Port
  name: VPN_PORT
  displayName: VPN Port
  value: "1197"
  required: true
- description: VPN Username
  name: VPN_USER
  displayName: VPN Username
  required: true
- description: VPN Password
  name: VPN_PASS
  displayName: VPN Password
  required: true
- description: VPN Remote
  name: VPN_REMOTE
  displayName: VPN Endpoint
  value: uk-london.privateinternetaccess.com
  required: true
- description: VPN Protocol
  name: VPN_PROTOCOL
  displayName: VPN Protocol
  value: udp
  required: true
- description: LAN Network - This should probably match the Openshift cluster network
  name: LAN_NETWORK
  displayName: LAN Network
  value: 10.128.0.0/23
  required: true
- description: GID of docker user
  name: PGID
  displayName: PGID
  value: "0"
- description: UID of docker user
  name: PUID
  displayName: PUID
  value: "0"
- description: VPN Incoming Port
  name: VPN_INCOMING_PORT
  displayName: VPN Incoming Port
  value: "58446"
  required: true
