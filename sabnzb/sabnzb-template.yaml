apiVersion: v1
kind: Template
message: |-
  The following service(s) have been created in your project: ${NAME}.

  For more information about using this template, including OpenShift considerations, see https://github.com/jameseck/openshift-templates
metadata:
  annotations:
    description: This template assumes you will have downloads and tv volumes already defined.
    iconClass: fa fa-television
    openshift.io/display-name: Sabnzb
    openshift.io/documentation-url: https://github.com/jameseck/openshift-templates
    openshift.io/long-description: This template defines resources needed to run
      Sabnzb.
    openshift.io/provider-display-name: James Eckersall
    openshift.io/support-url: https://github.com/jameseck/openshift-templates
    tags: sabnzb
    template.openshift.io/bindable: 'false'
  name: sabnzb
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${NAME}
    app: ${NAME}
  spec:
    dockerImageRepository: jameseckersall/sabnzbd
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: jameseckersall/sabnzbd:latest
      importPolicy:
        scheduled: true
      name: latest
      referencePolicy:
        type: Source
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 4
    labels:
      app: ${NAME}
    name: ${NAME}
  spec:
    replicas: 1
    selector:
      app: ${NAME}
      deploymentconfig: ${NAME}
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${NAME}
          deploymentconfig: ${NAME}
      spec:
        containers:
        - env:
          - name: API_KEY
            value: ${API_KEY}
          image: " "
          imagePullPolicy: Always
          readinessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: /
              port: 8080
            timeoutSeconds: 5
          livenessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: /
              port: 8080
            timeoutSeconds: 5
          name: ${NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /downloads
            name: downloads
          - mountPath: /tv
            name: tv
          - mountPath: /config
            name: sabnzb-config
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - persistentVolumeClaim:
            claimName: downloads
          name: downloads
        - persistentVolumeClaim:
            claimName: tv
          name: tv
        - persistentVolumeClaim:
            claimName: sabnzb-config
          name: sabnzb-config
    test: false
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - sabnzb
        from:
          kind: ImageStreamTag
          name: ${NAME}:latest
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    labels:
      app: ${NAME}
    name: ${NAME}
  spec:
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
    host: ${SITE_URL}
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: ${NAME}
      weight: 100
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
    creationTimestamp: null
    labels:
      app: ${NAME}
    name: ${NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${NAME}
      deploymentconfig: ${NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: downloads
  spec:
    accessModes:
    - ReadWriteMany
    resources:
       requests:
         storage: 1Gi
    selector:
      matchLabels:
        typelabel: ${DOWNLOADS_VOLUME_LABEL}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: tv
  spec:
    accessModes:
    - ReadWriteMany
    resources:
       requests:
         storage: 1Gi
    selector:
      matchLabels:
        typelabel: ${TV_VOLUME_LABEL}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: sabnzb-config
    labels:
      app: ${NAME}
  spec:
    accessModes:
    - ReadWriteMany
    resources:
       requests:
         storage: 1Gi
parameters:
- description: The name assigned to all of the frontend objects defined in this template.
  name: NAME
  displayName: Name
  value: sabnzb
  required: true
- description: The URL for this application
  name: SITE_URL
  displayName: Site URL
  value: ""
- description: The match label of an existing PV where Torrents are stored
  name: DOWNLOADS_VOLUME_LABEL
  displayName: Downloads Volume Label
  value: downloads
  required: true
- description: The match label of an existing PV where TV are stored
  name: TV_VOLUME_LABEL
  displayName: TV Volume Label
  value: tv
  required: true
- description: The size of the config volume
  name: CONFIG_VOLUME_SIZE
  displayName: Config Volume Size
  value: 1Gi
  required: true
- description: API Key
  name: API_KEY
  displayName: API Key
  required: true
  generate: expression
  from: "[a-f0-9]{32}"
