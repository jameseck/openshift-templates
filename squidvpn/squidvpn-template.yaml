apiVersion: v1
kind: Template
message: |-
  The following service(s) have been created in your project: ${NAME}.

  For more information about using this template, including OpenShift considerations, see https://github.com/jameseck/openshift-templates
metadata:
  annotations:
    description: This template assumes you will have torrents and tv volumes already defined.
    iconClass: fa fa-television
    openshift.io/display-name: Squid+VPN
    openshift.io/documentation-url: https://github.com/jameseck/openshift-templates
    openshift.io/long-description: This template defines resources needed to run Squid with OpenVPN.
    openshift.io/provider-display-name: James Eckersall
    openshift.io/support-url: https://github.com/jameseck/openshift-templates
    tags: squid
    template.openshift.io/bindable: 'false'
  name: squidvpn
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: squid
    labels:
      app: ${NAME}
  spec:
    dockerImageRepository: jameseckersall/squid
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: jameseckersall/squid:latest
        importPolicy:
          scheduled: true
      name: latest
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: openvpn
    labels:
      app: ${NAME}
  spec:
    dockerImageRepository: jameseckersall/openvpn
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: jameseckersall/openvpn:latest
        importPolicy:
          scheduled: true
      name: latest
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 4
    labels:
      app: ${NAME}
    name: ${NAME}
  spec:
    replicas: 1
    selector:
      app: ${NAME}
      deploymentconfig: ${NAME}
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${NAME}
          deploymentconfig: ${NAME}
      spec:
        containers:
        - env:
          - name: SQUID_USERNAME
            value: ${SQUID_USERNAME}
          - name: SQUID_PASSWORD
            value: ${SQUID_PASSWORD}
          image: " "
          imagePullPolicy: Always
#          readinessProbe:
#            initialDelaySeconds: 10
#            httpGet:
#              path: /
#              port: 3128
#            timeoutSeconds: 5
#          livenessProbe:
#            initialDelaySeconds: 10
#            httpGet:
#              path: /
#              port: 3128
#            timeoutSeconds: 5
          name: squid
          ports:
          - containerPort: 3128
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
        - env:
          - name: USERNAME
            value: ${USERNAME}
          - name: PASSWORD
            value: ${PASSWORD}
          - name: REGION
            value: ${REGION}
          - name: LOCAL_NETWORKS
            value: ${LOCAL_NETWORKS}
          image: " "
          imagePullPolicy: Always
          name: openvpn
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext:
          privileged: true
        serviceAccount: ${NAME}
        serviceAccountName: ${NAME}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - squid
        from:
          kind: ImageStreamTag
          name: squid:latest
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - openvpn
        from:
          kind: ImageStreamTag
          name: openvpn:latest
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    labels:
      app: ${NAME}
    name: ${NAME}
  spec:
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
    host: ${SITE_URL}
    port:
      targetPort: 3128-tcp
    to:
      kind: Service
      name: ${NAME}
      weight: 100
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
    creationTimestamp: null
    labels:
      app: ${NAME}
    name: ${NAME}
  spec:
    ports:
    - name: 3128-tcp
      port: 3128
      protocol: TCP
      targetPort: 3128
    selector:
      app: ${NAME}
      deploymentconfig: ${NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: null
    name: ${NAME}
parameters:
- description: The name assigned to all of the frontend objects defined in this template.
  name: NAME
  displayName: Name
  value: squidvpn
  required: true
- description: The URL for this application
  name: SITE_URL
  displayName: Site URL
  value: ""
- description: Squid Username
  name: SQUID_USERNAME
  displayName: Squid Username
  value: ""
- description: Squid Password
  name: SQUID_PASSWORD
  displayName: Squid Password
  value: ""
- description: PIA Username
  name: USERNAME
  displayName: Username
  value: ""
- description: PIA Password
  name: PASSWORD
  displayName: Password
  value: ""
- description: PIA Region
  name: REGION
  displayName: PIA Region
  value: "UK London"
- description: Comma separated list of local networks to not vpn
  name: LOCAL_NETWORKS
  displayName: Local Networks
  value: "172.30.0.0/16,192.168.1.0/24"
